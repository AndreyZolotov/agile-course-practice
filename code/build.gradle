apply plugin: 'idea'

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'checkstyle'
    apply plugin: 'pmd'

    repositories {
       mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.11'
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        options.compilerArgs << "-Werror"
    }

    test {
        afterTest { desc, result ->
            String suiteName = desc.className.substring(desc.className.lastIndexOf('.') + 1)
            println "[${suiteName}]: ${result.resultType} in ${desc.name}"
        }
    }

    checkstyle {
        checkstyleMain.configFile = new File("config/checkstyle/", "main.xml")
        checkstyleTest.configFile = new File("config/checkstyle/", "test.xml")
        // ignoreFailures = true
    }

    pmd {
        pmdMain.ruleSets = [ "java-basic", "java-braces", "java-design" ]
        pmdTest.ruleSets = [ "java-basic", "java-braces" ]
        ignoreFailures = true
    }

    gradle.taskGraph.afterTask { Task task, TaskState state ->
        if ((task.name == 'pmdMain' || task.name == 'pmdTest') /*&& state.failure*/) {
            def outFile = task.name == 'pmdMain' ? 'main.xml' : 'test.xml'
            def reportFile = file("${buildDir}/reports/pmd/${outFile}")

            def violationCount = 0
            if (reportFile.exists()) {
                def result = new XmlParser().parse(reportFile)
                result.file.each { file ->
                    file.violation.each { violation ->
                        println "${file.'@name'}:${violation.'@beginline'}: ${violation.text()}"
                    }
                }
            }
        }
    }
}
